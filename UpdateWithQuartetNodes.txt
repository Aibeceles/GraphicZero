// Update graphDB with representations of quartets, the next polynomial dimension of interest
// Select i.MaxN=ii.MaxN = x the variable of quartet to be defined  at i.N = 2^(i.N), i.N>3


MATCH (v:VertexNode)<-[]-(i:IndexedBy)-[]->(e:Evaluate),(t:TwoSeqFactor)<-[]-(i) where i.N='4' AND i.MaxN='10' AND i.Dimension="2" //AND t.twoSeq=1
WITH i.N as iN, i.MaxN as iM,e,v,t
OPTIONAL MATCH (vv:VertexNode)<-[]-(ii:IndexedBy)-[]->(ee:Evaluate {Value:toString(t.twoSeq)}),(tt:TwoSeqFactor)<-[]-(ii) where ii.MaxN='10'  AND ii.Dimension="2"
WITH iN,iM,e,v,vv,t,tt,ee
CREATE (p:ProductArgsNode {Divisor:t.twoSeq})
FOREACH(snoreMe IN CASE  WHEN vv.Vertex IS null  THEN [1] ELSE [] END | 
CREATE (v) <- [:ProductRelationT {T:t.twoSeq}] - (p)                           
 Set p.Divisor = 2 )
FOREACH(snoreMe IN CASE  WHEN vv.Vertex IS not null  THEN [1] ELSE [] END | 
CREATE (v) <- [:ProductRelationT {T:t.twoSeq}] - (p) 
Set p.Divisor = 4   
cREATE (p) - [:ProductRelationA {T:tt.twoSeq, Eval:ee.Value}] -> (vv)  )
MERGE  (i:IndexedBy {N:iN, Dimension:"4",MaxN:iM,RowCounter:t.twoSeq})
MERGE  (i)-[:VertexIndexedBy]->(p)
MERGE (i) -[:IndexedByEvaluate]->(e)
RETURN i,p,v
