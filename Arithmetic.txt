// Arithmetic Script
// Select x of the quadratic as i.MaxN from available list of nodes:  4,5,6,7,8,9,10,15,20,30,40,50,100,200,300,400,500
// Select two values to be added as string i.N with value = 2^(i.N-2) N>1 and N less then MaxN
// eg. i.N="4" or i.N="5" adds  2^2 + 2^3 as a graph representing quadratics evaluated at x=100 of value= 4 and 8
// Select a single i.N value for quadratic expression
 
MATCH (v:VertexNode)<-[]-(i:IndexedBy)-[]->(e:Evaluate),(t:TwoSeqFactor)<-[]-(i) WHERE (i.N="4" OR i.N="5") AND (i.MaxN="100") AND (i.Dimension="2")
WITH {TwoSeq:COLLECT({TwoSeq:toInteger(t.twoSeq)}),Vertex:v.Vertex} as factors,v,i,i.MaxN as iMax
WITH COLLECT(v.Vertex) as vV,factors,v,i,iMax
WITH COLLECT(factors.TwoSeq) as fact,v,i.N as N,vV,iMax
UNWIND RANGE(0,SIZE(fact)-1) as ii
UNWIND fact[ii] as ts
WITH collect(ts.TwoSeq) as cts,v,N,vV,iMax
WITH REDUCE(tSum=0,ff IN cts | tSum +ff) As TotalTseq,v,N,vV,iMax
WITH [v.Vertex,TotalTseq,N] as output,v,N,TotalTseq,vV,iMax
WITH {vVertex:v.Vertex,TotalT:TotalTseq,N:N} as outputMap,output,vV,iMax
WITH collect(output) as outputlist,outputMap,output,vV,iMax
WITH DISTINCT vV as vVV, outputlist,outputMap,output,iMax
WITH collect(outputMap.TotalT) as opMTT,vVV,iMax
WITH REDUCE(tSum=0,ff IN opMTT | tSum +ff) As TotalTseqq,opMTT,vVV,iMax
WITH Collect(TotalTseqq) as result,vVV,iMax

// Return {Multiple:result,Vertex:vVV} //  Uncomment and for instance: {"Vertex":"1 1 2 0 0","Degree":"2","Scalar":"1"}  are the Polynomial terms processed below 

UNWIND vVV as vVVV
WITH vVVV as lL,result as d,iMax
WITH lL,Size(lL) AS lLS,d,iMax                    
WITH lL,lLS-2 AS lLss,d,iMax                     
WITH SUBSTRING(lL,1,lLss) AS lLs,d,iMax          
WITH COLLECT(split(lLs,' ')) AS lList,d,iMax              

UNWIND RANGE(0,size(lList)-1) AS rC 
WITH  lList[rC] as vtx,d,iMax
WITH collect( toInteger((d[0]*(CASE WHEN toInteger(vtx[2])=-1 THEN toInteger(vtx[1])*2 ELSE toInteger(vtx[1]) END*(toInteger(iMax) ^ CASE WHEN toInteger(vtx[2])=-1 THEN toInteger(vtx[2])+1 ELSE toInteger(vtx[2]) END )))/2))  as rSlt
WITH REDUCE(tSum=0,ff IN rSlt  | tSum +ff) As TotalrSlt
RETURN TotalrSlt
